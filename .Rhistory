install.packages("rvest")
library(rvest)
htmlpage <- html(http://www.zillow.com/homes/recently_sold/1000000-_price/3720-_mp/featured_sort/46.645665,-120.385438,44.433779,-125.274354_rect/7_zm/)
htmlpage <- html(http://www.zillow.com/homes/recently_sold/1000000-_price/3720-_mp/featured_sort/46.645665,-120.385438,44.433779,-125.274354_rect/7_zm/)
htmlpage <- html(http://zillow.com/homes/recently_sold/1000000-_price/3720-_mp/featured_sort/46.645665,-120.385438,44.433779,-125.274354_rect/7_zm/)
htmlpage <- html("http://zillow.com/homes/recently_sold/1000000-_price/3720-_mp/featured_sort/46.645665,-120.385438,44.433779,-125.274354_rect/7_zm/")
htmlpage <- html("www.http://zillow.com/homes/recently_sold/1000000-_price/3720-_mp/featured_sort/46.645665,-120.385438,44.433779,-125.274354_rect/7_zm/")
htmlpage <- html("http://zillow.com/homes/recently_sold/1000000-_price/3720-_mp/featured_sort/46.645665,-120.385438,44.433779,-125.274354_rect/7_zm/")
htmlpage <- read_html("http://zillow.com/homes/recently_sold/1000000-_price/3720-_mp/featured_sort/46.645665,-120.385438,44.433779,-125.274354_rect/7_zm/")
html_address <- html_nodes(htmlpage, ".routable")
address <- html_text(html_address)
library(rvest)
htmlpage <- read_html("http://zillow.com/homes/recently_sold/1000000-_price/3720-_mp/featured_sort/46.645665,-120.385438,44.433779,-125.274354_rect/7_zm/")
html_address <- html_nodes(htmlpage, ".routable")
htmlpage
html_address
html_address <- html_nodes(htmlpage, "#list-results")
html_address
address <- html_text(html_address)
address
html_address <- html_nodes(htmlpage, "span , #sort-control-container , #list-results")
address <- html_text(html_address)
address
htmlpage <- read_html("http://zillow.com/homes/recently_sold/1000000-_price/3720-_mp/featured_sort/46.645665,-120.385438,44.433779,-125.274354_rect/7_zm/")
html_address <- html_nodes(htmlpage, "#list-results")
address <- html_text(html_address)
address
html_address <- html_nodes(htmlpage, ".pointer-cursor")
address <- html_text(html_address)
install.packages("markdown")
install.packages("knitr")
library(RMarkdown)
library(markdown)
library(knitr)
install.packages(c("abind", "BH", "boot", "class", "cluster", "codetools", "curl", "digest", "foreign", "gplots", "httr", "jsonlite", "lattice", "MASS", "Matrix", "mgcv", "mime", "nlme", "nnet", "quantmod", "R6", "Rcpp", "rvest", "selectr", "spatial", "stringi", "stringr", "survival", "TTR", "XML", "xml2", "zoo"))
install.packages("plyr")
install.packages("dplyr")
getwd
getwd()
rsconnect::setAccountInfo(name='data4life', token='06C0619F71444103930C462E08E9D70D', secret='1gsZgKAyqF2HWyXtu9ag3OjlbVlZONLQv+20wb7q')
install.packages("flexdashboard")
library("flexdashboard")
setwd("C:\\Users\\owner\\Desktop\\MMA")
#render your sweet site.
rmarkdown::render_site()
setwd("C:\\Users\\owner\\Desktop\\MMA")
#render your sweet site.
rmarkdown::render_site()
knitr::opts_chunk$set(echo = TRUE, message = FALSE)
#Fight data
D <- read.csv("Fights2.csv")
library(dplyr)
library(data.table)
library(knitr)
library(ggplot2)
directory <- "/Users/emily.webber/Dropbox/Website Dropbox 2/MMA"
setwd(directory)
#Fight data
D <- read.csv("Fights2.csv")
#Win Categories:  I didn't like the way the categories were listed in the data, so I made an excel csv sheet that contains the original descriptions and added new categoreis that cleaned up the data. This is merged with fight data using "merge" to make analysis easier.
C <- read.csv("Cat.csv")
D <- merge(D, C, by = "method_d", all = TRUE)
D <- setDT(D)
W <- select(D, f1fid, f1result)
Wb <- filter(W, f1result == "win")
W2 <- setDT(Wb)[, lapply(.SD, length), by = .(f1fid), .SDcols = c("f1result")]
colnames(W2)[colnames(W2)=="f1fid"] <- "Fight_ID"
colnames(W2)[colnames(W2)=="f1result"] <- "Wins"
L <- select(D, f2fid, f2result)
Lb <- filter(L, f2result == "loss")
L2 <- setDT(Lb)[, lapply(.SD, length), by = .(f2fid), .SDcols = c("f2result")]
colnames(L2)[colnames(L2)=="f2fid"] <- "Fight_ID"
colnames(L2)[colnames(L2)=="f2result"] <- "Loss"
DW1 <- select(D, f1fid, f1result)
DWb1 <- filter(DW1, f1result == "draw")
DW21 <- setDT(DWb1)[, lapply(.SD, length), by = .(f1fid), .SDcols = c("f1result")]
colnames(DW21)[colnames(DW21)=="f1fid"] <- "Fight_ID"
colnames(DW21)[colnames(DW21)=="f1result"] <- "Draw"
DW <- select(D, f2fid, f2result)
DWb <- filter(DW, f2result == "draw")
DW2 <- setDT(DWb)[, lapply(.SD, length), by = .(f2fid), .SDcols = c("f2result")]
colnames(DW2)[colnames(DW2)=="f2fid"] <- "Fight_ID"
colnames(DW2)[colnames(DW2)=="f2result"] <- "Draw"
DW3 <- rbind(DW2, DW21)
DW4 <- setDT(DW3)[, lapply(.SD, length), by = .(Fight_ID), .SDcols = c("Draw")]
RC <- merge(W2, L2, by = "Fight_ID", all = TRUE)
RC2 <- merge(RC, DW4, by = "Fight_ID", all = TRUE)
RC2[is.na(RC2)] <- 0
library(dplyr)
library(data.table)
library(knitr)
library(ggplot2)
directory <- "/Users/emily.webber/Dropbox/Website Dropbox 2/MMA"
setwd(directory)
#Fight data
D <- read.csv("Fights2.csv")
#Win Categories:  I didn't like the way the categories were listed in the data, so I made an excel csv sheet that contains the original descriptions and added new categoreis that cleaned up the data. This is merged with fight data using "merge" to make analysis easier.
C <- read.csv("Cat.csv")
D <- merge(D, C, by = "method_d", all = TRUE)
D <- setDT(D)
#Win/Loss Ratio**************
W <- select(D, f1fid, f1result)
Wb <- filter(W, f1result == "win")
W2 <- setDT(Wb)[, lapply(.SD, length), by = .(f1fid), .SDcols = c("f1result")]
colnames(W2)[colnames(W2)=="f1fid"] <- "Fight_ID"
colnames(W2)[colnames(W2)=="f1result"] <- "Wins"
L <- select(D, f2fid, f2result)
Lb <- filter(L, f2result == "loss")
L2 <- setDT(Lb)[, lapply(.SD, length), by = .(f2fid), .SDcols = c("f2result")]
colnames(L2)[colnames(L2)=="f2fid"] <- "Fight_ID"
colnames(L2)[colnames(L2)=="f2result"] <- "Loss"
DW1 <- select(D, f1fid, f1result)
DWb1 <- filter(DW1, f1result == "draw")
DW21 <- setDT(DWb1)[, lapply(.SD, length), by = .(f1fid), .SDcols = c("f1result")]
colnames(DW21)[colnames(DW21)=="f1fid"] <- "Fight_ID"
colnames(DW21)[colnames(DW21)=="f1result"] <- "Draw"
DW <- select(D, f2fid, f2result)
DWb <- filter(DW, f2result == "draw")
DW2 <- setDT(DWb)[, lapply(.SD, length), by = .(f2fid), .SDcols = c("f2result")]
colnames(DW2)[colnames(DW2)=="f2fid"] <- "Fight_ID"
colnames(DW2)[colnames(DW2)=="f2result"] <- "Draw"
DW3 <- rbind(DW2, DW21)
DW4 <- setDT(DW3)[, lapply(.SD, length), by = .(Fight_ID), .SDcols = c("Draw")]
RC <- merge(W2, L2, by = "Fight_ID", all = TRUE)
RC2 <- merge(RC, DW4, by = "Fight_ID", all = TRUE)
RC2[is.na(RC2)] <- 0
#Fighters*********
FR <- read.csv("Fighters.csv")
FR2 <- select(FR, fid, name,	Gender, nick,	birth_date,	height,	weight,	association,	class,	locality,	country)
colnames(FR2)[colnames(FR2)=="name"] <- "Name"
colnames(FR2)[colnames(FR2)=="fid"] <- "Fight_ID"
FR3 <- merge(RC2, FR2, by = "Fight_ID", all = TRUE)
colnames(FR3)[colnames(FR3)=="Name.x"] <- "Name"
FR3$Record <- (FR3$Wins)/(FR3$Loss)
FR3$Record <- round(FR3$Record, digits = 2)
FR3$Undefeated[FR3$Loss == 0] <- "Undefeated"
FR3$Undefeated[FR3$Loss >= 1] <- "Defeated"
FR3U <- filter(FR3, Loss == 0)
FR3D <- filter(FR3, Loss >= 1)
FR3U$Record <- FR3U$Wins
FR3C <- rbind(FR3U, FR3D)
FR3 <- FR3C
FR3 <- FR3[!duplicated(FR3), ]
####RING RUST
TB_F1 <- select(D, f1fid, f1result, event_date)
TB_F1$event_date <- as.POSIXct.Date(TB_F1$event_date,format="%Y-%m-%d")
colnames(TB_F1)[colnames(TB_F1)=="f1fid"] <- "Fight_ID"
colnames(TB_F1)[colnames(TB_F1)=="f1result"] <- "Result"
TB_F2 <- select(D, f2fid, f2result, event_date)
TB_F2$event_date <- as.POSIXct.Date(TB_F2$event_date,format="%Y-%m-%d")
colnames(TB_F2)[colnames(TB_F2)=="f2fid"] <- "Fight_ID"
colnames(TB_F2)[colnames(TB_F2)=="f2result"] <- "Result"
TB_F3 <- rbind(TB_F1, TB_F2)
TB_F3b <-  TB_F3[ order(TB_F3[,1], -TB_F3[,3]),]
TB_F3b <- as.data.table(TB_F3b)
setkey(TB_F3b,Fight_ID)
x <- TB_F3b[,lapply(.SD,function(x) head(x,2)),by = key(TB_F3b)]
xmax <- setDT(x)[,.SD[which.max(event_date)],keyby=Fight_ID]
colnames(xmax)[colnames(xmax)=="event_date"] <- "EMax"
xmin <- setDT(x)[,.SD[which.min(event_date)],keyby=Fight_ID]
colnames(xmin)[colnames(xmin)=="event_date"] <- "EMin"
xmaxmin <- merge(xmax, xmin, by = "Fight_ID")
#xmaxmin$Result.x <- NULL
#xmaxmin$Result.y <- NULL
xmaxmin$EMax <- as.POSIXct(unlist(xmaxmin$EMax), format = "%m/%d/%Y")
xmaxmin$EMin <- as.POSIXct(unlist(xmaxmin$EMin), format = "%m/%d/%Y")
xmaxmin$Diff <- difftime(xmaxmin$EMax, xmaxmin$EMin, units = c("days"))
ydiff <- setDT(xmaxmin)[, lapply(.SD, mean), by = .(Result.x), .SDcols = c("Diff")]
ydiff$Diff <- round(ydiff$Diff, digits = 1)
#write.csv(xmaxmin, file = "ringrust.csv")
std <- function(x) sd(x)/sqrt(length(x))
ydiffse <- setDT(xmaxmin)[, lapply(.SD, std), by = .(Result.x), .SDcols = c("Diff")]
ydiffse$Diff <- round(ydiffse$Diff, digits = 1)
#Age of fighters********************************
Win <- select(D, f1fid, f1result, event_date)
Loss <- select(D, f2fid, f2result, event_date)
Age <- select(FR3, Fight_ID, birth_date)
colnames(Win)[colnames(Win)=="f1fid"] <- "Fight_ID"
colnames(Loss)[colnames(Loss)=="f2fid"] <- "Fight_ID"
colnames(Win)[colnames(Win)=="f1result"] <- "Result"
colnames(Loss)[colnames(Loss)=="f2result"] <- "Result"
Win <- as.data.frame(Win)
Loss <- as.data.frame(Loss)
WLA <- rbind(Win, Loss)
WLA2 <- merge(WLA, Age, by = "Fight_ID")
WLA2$birth_date <- as.POSIXct(unlist(WLA2$birth_date), format = "%m/%d/%Y")
WLA2$event_date <- as.POSIXct(unlist(WLA2$event_date), format = "%m/%d/%Y")
WLA2$Age <- difftime(WLA2$event_date, WLA2$birth_date, units = c("days"))
WLA2$Age <- WLA2$Age / 365
WLA2$Age <- round(WLA2$Age, digits = 1)
#Fights per year********************
#Locations of Fighters****************
#Record
Place <- setDT(FR3)[, lapply(.SD, sum), by = .(association), .SDcols = c("Wins", "Loss", "Draw")]
Place <- filter(Place, association != "")
Place2 <- Place[order(-Place$Wins),]
Place3 <- Place2[1:10,]
FR3$Loc <- paste(FR3$locality, FR3$country, sep = ", ")
Location <- setDT(FR3)[, lapply(.SD, sum), by = .(Loc), .SDcols = c("Wins", "Loss", "Draw")]
Location2 <- Location[order(-Location$Wins),]
Location3 <- Location2[1:10,]
library(dplyr)
library(data.table)
library(knitr)
library(ggplot2)
directory <- "/Users/emily.webber/Dropbox/Website Dropbox 2/MMA"
setwd(directory)
#Fight data
D <- read.csv("Fights2.csv")
#Win Categories:  I didn't like the way the categories were listed in the data, so I made an excel csv sheet that contains the original descriptions and added new categoreis that cleaned up the data. This is merged with fight data using "merge" to make analysis easier.
C <- read.csv("Cat.csv")
D <- merge(D, C, by = "method_d", all = TRUE)
D <- setDT(D)
#Win/Loss Ratio**************
W <- select(D, f1fid, f1result)
Wb <- filter(W, f1result == "win")
W2 <- setDT(Wb)[, lapply(.SD, length), by = .(f1fid), .SDcols = c("f1result")]
colnames(W2)[colnames(W2)=="f1fid"] <- "Fight_ID"
colnames(W2)[colnames(W2)=="f1result"] <- "Wins"
L <- select(D, f2fid, f2result)
Lb <- filter(L, f2result == "loss")
L2 <- setDT(Lb)[, lapply(.SD, length), by = .(f2fid), .SDcols = c("f2result")]
colnames(L2)[colnames(L2)=="f2fid"] <- "Fight_ID"
colnames(L2)[colnames(L2)=="f2result"] <- "Loss"
DW1 <- select(D, f1fid, f1result)
DWb1 <- filter(DW1, f1result == "draw")
DW21 <- setDT(DWb1)[, lapply(.SD, length), by = .(f1fid), .SDcols = c("f1result")]
colnames(DW21)[colnames(DW21)=="f1fid"] <- "Fight_ID"
colnames(DW21)[colnames(DW21)=="f1result"] <- "Draw"
DW <- select(D, f2fid, f2result)
DWb <- filter(DW, f2result == "draw")
DW2 <- setDT(DWb)[, lapply(.SD, length), by = .(f2fid), .SDcols = c("f2result")]
colnames(DW2)[colnames(DW2)=="f2fid"] <- "Fight_ID"
colnames(DW2)[colnames(DW2)=="f2result"] <- "Draw"
DW3 <- rbind(DW2, DW21)
DW4 <- setDT(DW3)[, lapply(.SD, length), by = .(Fight_ID), .SDcols = c("Draw")]
RC <- merge(W2, L2, by = "Fight_ID", all = TRUE)
RC2 <- merge(RC, DW4, by = "Fight_ID", all = TRUE)
RC2[is.na(RC2)] <- 0
#Fighters*********
FR <- read.csv("Fighters.csv")
FR2 <- select(FR, fid, name,	Gender, nick,	birth_date,	height,	weight,	association,	class,	locality,	country)
colnames(FR2)[colnames(FR2)=="name"] <- "Name"
colnames(FR2)[colnames(FR2)=="fid"] <- "Fight_ID"
FR3 <- merge(RC2, FR2, by = "Fight_ID", all = TRUE)
colnames(FR3)[colnames(FR3)=="Name.x"] <- "Name"
FR3$Record <- (FR3$Wins)/(FR3$Loss)
FR3$Record <- round(FR3$Record, digits = 2)
FR3$Undefeated[FR3$Loss == 0] <- "Undefeated"
FR3$Undefeated[FR3$Loss >= 1] <- "Defeated"
FR3U <- filter(FR3, Loss == 0)
FR3D <- filter(FR3, Loss >= 1)
FR3U$Record <- FR3U$Wins
FR3C <- rbind(FR3U, FR3D)
FR3 <- FR3C
FR3 <- FR3[!duplicated(FR3), ]
####RING RUST
TB_F1 <- select(D, f1fid, f1result, event_date)
TB_F1$event_date <- as.POSIXct.Date(TB_F1$event_date,format="%Y-%m-%d")
colnames(TB_F1)[colnames(TB_F1)=="f1fid"] <- "Fight_ID"
colnames(TB_F1)[colnames(TB_F1)=="f1result"] <- "Result"
TB_F2 <- select(D, f2fid, f2result, event_date)
TB_F2$event_date <- as.POSIXct.Date(TB_F2$event_date,format="%Y-%m-%d")
colnames(TB_F2)[colnames(TB_F2)=="f2fid"] <- "Fight_ID"
colnames(TB_F2)[colnames(TB_F2)=="f2result"] <- "Result"
TB_F3 <- rbind(TB_F1, TB_F2)
TB_F3b <-  TB_F3[ order(TB_F3[,1], -TB_F3[,3]),]
TB_F3b <- as.data.table(TB_F3b)
setkey(TB_F3b,Fight_ID)
x <- TB_F3b[,lapply(.SD,function(x) head(x,2)),by = key(TB_F3b)]
xmax <- setDT(x)[,.SD[which.max(event_date)],keyby=Fight_ID]
colnames(xmax)[colnames(xmax)=="event_date"] <- "EMax"
xmin <- setDT(x)[,.SD[which.min(event_date)],keyby=Fight_ID]
colnames(xmin)[colnames(xmin)=="event_date"] <- "EMin"
xmaxmin <- merge(xmax, xmin, by = "Fight_ID")
#xmaxmin$Result.x <- NULL
#xmaxmin$Result.y <- NULL
xmaxmin$EMax <- as.POSIXct(unlist(xmaxmin$EMax), format = "%m/%d/%Y")
xmaxmin$EMin <- as.POSIXct(unlist(xmaxmin$EMin), format = "%m/%d/%Y")
xmaxmin$Diff <- difftime(xmaxmin$EMax, xmaxmin$EMin, units = c("days"))
ydiff <- setDT(xmaxmin)[, lapply(.SD, mean), by = .(Result.x), .SDcols = c("Diff")]
ydiff$Diff <- round(ydiff$Diff, digits = 1)
#write.csv(xmaxmin, file = "ringrust.csv")
std <- function(x) sd(x)/sqrt(length(x))
ydiffse <- setDT(xmaxmin)[, lapply(.SD, std), by = .(Result.x), .SDcols = c("Diff")]
ydiffse$Diff <- round(ydiffse$Diff, digits = 1)
#Age of fighters********************************
Win <- select(D, f1fid, f1result, event_date)
Loss <- select(D, f2fid, f2result, event_date)
Age <- select(FR3, Fight_ID, birth_date)
colnames(Win)[colnames(Win)=="f1fid"] <- "Fight_ID"
colnames(Loss)[colnames(Loss)=="f2fid"] <- "Fight_ID"
colnames(Win)[colnames(Win)=="f1result"] <- "Result"
colnames(Loss)[colnames(Loss)=="f2result"] <- "Result"
Win <- as.data.frame(Win)
Loss <- as.data.frame(Loss)
WLA <- rbind(Win, Loss)
WLA2 <- merge(WLA, Age, by = "Fight_ID")
WLA2$birth_date <- as.POSIXct(unlist(WLA2$birth_date), format = "%m/%d/%Y")
WLA2$event_date <- as.POSIXct(unlist(WLA2$event_date), format = "%m/%d/%Y")
WLA2$Age <- difftime(WLA2$event_date, WLA2$birth_date, units = c("days"))
WLA2$Age <- WLA2$Age / 365
WLA2$Age <- round(WLA2$Age, digits = 1)
#Fights per year********************
#Locations of Fighters****************
#Record
Place <- setDT(FR3)[, lapply(.SD, sum), by = .(association), .SDcols = c("Wins", "Loss", "Draw")]
Place <- filter(Place, association != "")
Place2 <- Place[order(-Place$Wins),]
Place3 <- Place2[1:10,]
FR3$Loc <- paste(FR3$locality, FR3$country, sep = ", ")
Location <- setDT(FR3)[, lapply(.SD, sum), by = .(Loc), .SDcols = c("Wins", "Loss", "Draw")]
Location2 <- Location[order(-Location$Wins),]
Location3 <- Location2[1:10,]
install.packages(c("ggmap", "htmlwidgets", "leaflet"))
install.packages("obtimbase")
install.packages("maptools")
install.packages("rgdal")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
knitr::opts_chunk$set(echo = TRUE, warning= FALSE)
library(plyr)
library(dplyr)
library(knitr)
library(optimbase)
sessioninfo()
sessionInfo()
